{"version":3,"sources":["components/layout/header/header.jsx","components/layout/layout.jsx","components/bashGenerator/steps/packageManager/packageManager.jsx","components/bashGenerator/steps/installPackages/installPackages.jsx","components/bashGenerator/steps/getScript/getScript.jsx","components/bashGenerator/bashGenerator.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","textDecoration","link","Header","classes","className","AppBar","position","Toolbar","to","IconButton","edge","aria-label","Typography","variant","Button","padding","Layout","props","CssBaseline","Container","maxWidth","component","children","container","background","borderRadius","fontSize","marginTop","marginBottom","form","width","legend","label","margin","packageManager","display","gridTemplateColumns","gridAutoFlow","packagesWillInstall","gridGap","packagesWillInstallOption","marginLeft","PackageManager","data","selectedManager","setSelectedManager","gutterBottom","RadioGroup","name","value","onChange","event","target","packageManagers","map","id","codeName","status","FormControlLabel","key","control","Radio","disabled","installPackages","InstallPackages","selectedPackages","setSelectedPackages","FormGroup","includes","tempArr","splice","indexOf","packages","Switch","checked","conteiner","chip","code","overflowX","GetScript","isNeedCurl","useMemo","some","item","scripts","should","index","Chip","deleteIcon","Card","Alert","severity","AlertTitle","CardContent","str","bashGenerator","border","boxShadow","minHeight","footer","BorderLinearProgress","withStyles","height","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","BashGenerator","useState","step","setStep","useEffect","sessionStorage","getItem","JSON","parse","setItem","stringify","progressValue","steps","isFirstStep","isLastStep","length","onClick","preventDefault","App","myRef","useRef","document","current","scrollTop","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"o9HAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,EACVK,MAAO,UACPC,eAAgB,QAElBC,KAAM,CACJF,MAAO,UACPC,eAAgB,YAIL,SAASE,IACtB,IAAMC,EAAUb,IAEhB,OACE,yBAAKc,UAAWD,EAAQV,MACtB,kBAACY,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,UAAWD,EAAQF,MAC9B,kBAACQ,EAAA,EAAD,CACEC,KAAK,QACLN,UAAWD,EAAQR,WACnBI,MAAM,UACNY,aAAW,QAEX,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAMH,GAAG,IAAIJ,UAAWD,EAAQL,OAC9B,kBAACc,EAAA,EAAD,CAAYC,QAAQ,MAApB,SAEF,kBAAC,IAAD,CAAML,GAAG,QAAQJ,UAAWD,EAAQF,MAClC,kBAACa,EAAA,EAAD,CAAQf,MAAM,WAAd,gBC3CZ,IAAMT,EAAYC,YAAW,CAC3BE,KAAM,CACJsB,QAAS,WAkBEC,MAdf,SAAgBC,GACd,IAAMd,EAAUb,IAEhB,OACE,oCACE,kBAACY,EAAD,MACA,kBAACgB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,OAAOjB,UAAWD,EAAQV,MACxDwB,EAAMK,Y,2DCXXhC,EAAYC,YAAW,CAC3BgC,UAAW,CACTC,WAAY,YACZC,aAAc,QACdV,QAAS,SAEXjB,MAAO,CACL4B,SAAU,SACVC,UAAW,QACXC,aAAc,SAEhBC,KAAM,CACJC,MAAO,QAETC,OAAQ,CACNhC,MAAO,QACP,UAAW,CACTA,MAAO,UAGXiC,MAAO,CACLC,OAAQ,GAEVC,eAAgB,CACdC,QAAS,OACTC,oBAAqB,uCAErBC,aAAc,QACdT,aAAc,SAEhBU,oBAAqB,CACnBH,QAAS,OACTC,oBAAqB,uCACrBG,QAAS,GACTF,aAAc,QACdT,aAAc,SAEhBY,0BAA2B,CACzBC,WAAY,QACZ7C,YAAa,WAwCF8C,MApCf,YAA4E,IAAD,IAAjDC,KAAQC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,mBAC3C1C,EAAUb,IAMhB,OACE,6BAASc,UAAWD,EAAQoB,WAC1B,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKiC,cAAY,EAAC1C,UAAWD,EAAQL,OAAzD,iCAGA,kBAACiD,EAAA,EAAD,CACEpC,aAAW,iBACXqC,KAAK,iBACLC,MAAOL,EACPM,SAb6B,SAACC,GAClCN,EAAmBM,EAAMC,OAAOH,QAa5B7C,UAAWD,EAAQ+B,gBAEnB,oCACGmB,EAAgBC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUR,EAAjB,EAAiBA,KAAMS,EAAvB,EAAuBA,OAAvB,OACnB,kBAACC,EAAA,EAAD,CACEtD,UAAWD,EAAQ6B,MACnB2B,IAAKJ,EACLN,MAAOO,EACPI,QAAS,kBAACC,EAAA,EAAD,MACT7B,MAAOgB,EACPc,UAAWL,W,kCCtEnBnE,EAAYC,YAAW,CAC3BgC,UAAW,CACTC,WAAY,YACZC,aAAc,QACdV,QAAS,SAEXjB,MAAO,CACL4B,SAAU,SACVC,UAAW,QACXC,aAAc,SAEhBC,KAAM,CACJC,MAAO,QAETC,OAAQ,CACNhC,MAAO,QACP,UAAW,CACTA,MAAO,UAGXiC,MAAO,CACLC,OAAQ,GAEV8B,gBAAiB,CACf5B,QAAS,OACTC,oBAAqB,uCACrBG,QAAS,GACTF,aAAc,QACdT,aAAc,SAEhBY,0BAA2B,CACzBC,WAAY,QACZ7C,YAAa,WAqDFoE,MAjDf,YAEI,IAAD,IADDrB,KAAQC,EACP,EADOA,gBAAiBqB,EACxB,EADwBA,iBAAkBC,EAC1C,EAD0CA,oBAErC/D,EAAUb,IAYhB,OACE,6BAASc,UAAWD,EAAQoB,WAC1B,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKiC,cAAY,EAAC1C,UAAWD,EAAQL,OAAzD,iCAGA,kBAACqE,EAAA,EAAD,CACExD,aAAW,kBACXqC,KAAK,kBACLC,MAAOL,EACPM,SAnB8B,SAACC,GACnC,GAAIc,EAAiBG,SAASjB,EAAMC,OAAOH,OAAQ,CACjD,IAAIoB,EAAUJ,EACdI,EAAQC,OAAOL,EAAiBM,QAAQpB,EAAMC,OAAOH,OAAQ,GAC7DiB,EAAoBG,QAEpBH,EAAoB,GAAD,mBAAKD,GAAL,CAAuBd,EAAMC,OAAOH,UAcrD7C,UAAWD,EAAQ4D,iBAEnB,oCACGS,EAASlB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUR,EAAjB,EAAiBA,KAAMS,EAAvB,EAAuBA,OAAvB,OACZ,kBAACC,EAAA,EAAD,CACEtD,UAAWD,EAAQ6B,MACnB2B,IAAKJ,EACLN,MAAOO,EACPxB,MAAOgB,EACPc,UAAWL,EACXG,QACE,kBAACa,EAAA,EAAD,CACE1E,MAAM,UACN2E,QAAST,EAAiBG,SAASZ,c,+ICxE/ClE,GAAYC,YAAW,CAC3BoF,UAAW,CACTnD,WAAY,YACZC,aAAc,QACdV,QAAS,SAEX6D,KAAM,CACJ3C,OAAQ,SAEV4C,KAAM,CACJ5C,OAAQ,UACR6C,UAAW,UAiEAC,OA7Df,YAAqE,IAAD,IAA/CpC,KAAQC,EAAuC,EAAvCA,gBAAiBqB,EAAsB,EAAtBA,iBACtC9D,EAAUb,KAEV0F,EAAaC,mBACjB,kBAAMhB,EAAiBiB,MAAK,SAACC,GAAD,OAAUC,EAAaC,OAAOjB,SAASe,QACnE,CAAClB,IAGH,OACE,yBAAK7D,UAAWD,EAAQwE,WACtB,+CACoB/B,EADpB,kFAIC4B,EAASlB,KAAI,SAAC6B,EAAMG,GAAP,OACZ,kBAACC,EAAA,EAAD,CACE5B,IAAK2B,EACLtD,MAAOwC,EAASc,GAAOtC,KACvBjD,MACEkE,EAAiBG,SAASe,EAAK3B,UAAY,UAAY,YAEzDgC,WAAY,kBAAC,IAAD,MACZpF,UAAWD,EAAQyE,UAGvB,kBAACa,EAAA,EAAD,CAAMrF,UAAWD,EAAQ0E,KAAMhE,QAAQ,YACpCmE,GACC,kBAACU,EAAA,EAAD,CAAOC,SAAS,WACd,kBAACC,EAAA,EAAD,gBADF,uCAGE,0DAGJ,kBAACC,EAAA,EAAD,KACE,kBAACjF,EAAA,EAAD,CAAYC,QAAQ,QAAQQ,UAAU,OACnC2D,GACCI,EAAaxC,GAAiBU,KAAI,SAACwC,GAAD,OAChC,oCACGA,EACD,6BACA,iCAGL7B,EAAiBX,KAAI,SAAC6B,GAAD,OACpB,oCACGC,EAAQD,GAAMvC,GAAiBU,KAAI,SAACwC,GAAD,OAClC,oCACGA,EACD,iCAGJ,sCCnEVxG,GAAYC,YAAW,CAC3BwG,cAAe,CACbvE,WAAY,2CACZzB,MAAO,QACPgB,QAAS,QACTiF,OAAQ,EACRvE,aAAc,QACdwE,UAAW,wCACXC,UAAW,sBAEbpG,MAAO,CACL4B,SAAU,QAEZyE,OAAQ,CACNhE,QAAS,OACTC,oBAAqB,uCACrBG,QAAS,GACTF,aAAc,QACdV,UAAW,UAGTyE,GAAuBC,aAAW,SAAC7G,GAAD,MAAY,CAClDC,KAAM,CACJwC,OAAQ,gBACRqE,OAAQ,GACR7E,aAAc,GAEhB8E,aAAc,CACZC,gBACEhH,EAAMiH,QAAQC,KAA4B,UAAvBlH,EAAMiH,QAAQE,KAAmB,IAAM,MAE9DC,IAAK,CACHnF,aAAc,EACd+E,gBAAiB,cAZQH,CAczBQ,KA2FWC,OAvFf,YAAiC,EAARnE,KAAS,IAC1BxC,EAAUb,KADe,EAEPyH,mBAAS,GAFF,mBAExBC,EAFwB,KAElBC,EAFkB,OAGeF,mBAAS,OAHxB,mBAGxBnE,EAHwB,KAGPC,EAHO,OAIiBkE,mBAAS,IAJ1B,mBAIxB9C,EAJwB,KAINC,EAJM,KAM/BgD,qBAAU,WACR,GAAIC,eAAeC,QATF,WASyB,CAAC,IAAD,EAKpCC,KAAKC,MAAMH,eAAeC,QAdf,YASyB,IAEtCJ,YAFsC,MAE/B,EAF+B,MAGtCpE,uBAHsC,MAGpB,MAHoB,MAItCqB,wBAJsC,MAInB,GAJmB,EAMxCgD,EAAQD,GACRnE,EAAmBD,GACnBsB,EAAoBD,MAErB,IAEHiD,qBAAU,WACRC,eAAeI,QAtBE,UAwBfF,KAAKG,UAAU,CAAER,OAAMpE,kBAAiBqB,mBAAkBtB,KAAM,aAEjE,CAACqE,EAAMpE,EAAiBqB,IAE3B,IAAMwD,EAAiB,GAAWT,EAE5BU,EAAQ,CACZ,kBAAC,EAAD,CAAgB/E,KAAM,CAAEC,kBAAiBC,wBACzC,kBAAC,EAAD,CACEF,KAAM,CAAEC,kBAAiBqB,mBAAkBC,yBAE7C,kBAAC,GAAD,CAAWvB,KAAM,CAAEC,kBAAiBqB,uBAGhC0D,EAAc1C,mBAAQ,kBAAe,IAAT+B,IAAY,CAACA,IACzCY,EAAa3C,mBAAQ,kBAAM+B,IAASU,EAAMG,OAAS,IAAG,CAC1Db,EACAU,EAAMG,SAaR,OACE,yBAAKzH,UAAWD,EAAQ4F,eACtB,kBAACnF,EAAA,EAAD,CAAYC,QAAQ,KAAKiC,cAAY,EAAC1C,UAAWD,EAAQL,OAAzD,QACQkH,EAAO,EADf,OACsBU,EAAMG,QAE5B,kBAACzB,GAAD,CAAsBvF,QAAQ,cAAcoC,MAAOwE,IACnD,oCAAGC,EAAMV,IACT,yBAAK5G,UAAWD,EAAQgG,SACpBwB,GACA,kBAAC7G,EAAA,EAAD,CACED,QAAQ,YACRd,MAAM,UACN4G,KAAK,SACL1D,MAAM,OACN6E,QAxBV,SAAyB3E,GACvBA,EAAM4E,iBACNd,EAAiB,IAATD,EAAa,EAAIA,EAAO,KAiB1B,SAUAY,GACA,kBAAC9G,EAAA,EAAD,CACED,QAAQ,YACRd,MAAM,UACN4G,KAAK,SACL1D,MAAM,OACN6E,QA9BV,SAAyB3E,GACvBA,EAAM4E,iBACNd,EAAiB,IAATD,EAAa,EAAIA,EAAO,KAuB1B,WClGKgB,OAjBf,WACE,IAAMC,EAAQC,mBAOd,OALAhB,qBAAU,WACRiB,SAASrI,MAAQ,iBACjBmI,EAAMG,QAAQC,UAAY,IACzB,IAGD,yBAAKjI,UAAU,MAAMkI,IAAKL,GACxB,kBAAC,EAAD,KACE,kBAAC,GAAD,SCLYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFX,SAASY,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6bdbb373.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n  link: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Link to=\"/\" className={classes.link}>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </Link>\n          <Link to=\"/\" className={classes.title}>\n            <Typography variant=\"h6\">Home</Typography>\n          </Link>\n          <Link to=\"/bash\" className={classes.link}>\n            <Button color=\"inherit\">Bash Gen</Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from \"./header/header\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '3vmin',\n  }\n});\n\nfunction Layout(props) {\n  const classes = useStyles();\n\n  return(\n    <>\n      <Header/>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" component=\"main\" className={classes.root}>\n          {props.children}\n      </Container>\n    </>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport packageManagers from \"../../../../database/packageManagers.json\";\n\nconst useStyles = makeStyles({\n  container: {\n    background: \"#c0c0c050\",\n    borderRadius: \"2vmin\",\n    padding: \"3vmin\",\n  },\n  title: {\n    fontSize: \"1.3rem\",\n    marginTop: \"3vmin\",\n    marginBottom: \"3vmin\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  legend: {\n    color: \"white\",\n    \"&:focus\": {\n      color: \"white\",\n    },\n  },\n  label: {\n    margin: 0,\n  },\n  packageManager: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n    // gridGap: 32,\n    gridAutoFlow: \"dense\",\n    marginBottom: \"3vmin\",\n  },\n  packagesWillInstall: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(210px, 1fr))\",\n    gridGap: 32,\n    gridAutoFlow: \"dense\",\n    marginBottom: \"3vmin\",\n  },\n  packagesWillInstallOption: {\n    marginLeft: \"3vmin\",\n    marginRight: \"3vmin\",\n  },\n});\n\nfunction PackageManager({ data: { selectedManager, setSelectedManager } }) {\n  const classes = useStyles();\n\n  const handlePackageManagerChange = (event) => {\n    setSelectedManager(event.target.value);\n  };\n\n  return (\n    <article className={classes.container}>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Which package manager to use?\n      </Typography>\n      <RadioGroup\n        aria-label=\"packageManager\"\n        name=\"packageManager\"\n        value={selectedManager}\n        onChange={handlePackageManagerChange}\n        className={classes.packageManager}\n      >\n        <>\n          {packageManagers.map(({ id, codeName, name, status }) => (\n            <FormControlLabel\n              className={classes.label}\n              key={id}\n              value={codeName}\n              control={<Radio />}\n              label={name}\n              disabled={!status}\n            />\n          ))}\n        </>\n      </RadioGroup>\n    </article>\n  );\n}\n\nexport default PackageManager;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport packages from \"../../../../database/packages.json\";\n\nconst useStyles = makeStyles({\n  container: {\n    background: \"#c0c0c050\",\n    borderRadius: \"2vmin\",\n    padding: \"3vmin\",\n  },\n  title: {\n    fontSize: \"1.3rem\",\n    marginTop: \"3vmin\",\n    marginBottom: \"3vmin\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  legend: {\n    color: \"white\",\n    \"&:focus\": {\n      color: \"white\",\n    },\n  },\n  label: {\n    margin: 0,\n  },\n  installPackages: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(210px, 1fr))\",\n    gridGap: 32,\n    gridAutoFlow: \"dense\",\n    marginBottom: \"3vmin\",\n  },\n  packagesWillInstallOption: {\n    marginLeft: \"3vmin\",\n    marginRight: \"3vmin\",\n  },\n});\n\nfunction InstallPackages({\n  data: { selectedManager, selectedPackages, setSelectedPackages },\n}) {\n  const classes = useStyles();\n\n  const handleInstallPackagesChange = (event) => {\n    if (selectedPackages.includes(event.target.value)) {\n      let tempArr = selectedPackages;\n      tempArr.splice(selectedPackages.indexOf(event.target.value), 1);\n      setSelectedPackages(tempArr);\n    } else {\n      setSelectedPackages([...selectedPackages, event.target.value]);\n    }\n  };\n\n  return (\n    <article className={classes.container}>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Which package manager to use?\n      </Typography>\n      <FormGroup\n        aria-label=\"installPackages\"\n        name=\"installPackages\"\n        value={selectedManager}\n        onChange={handleInstallPackagesChange}\n        className={classes.installPackages}\n      >\n        <>\n          {packages.map(({ id, codeName, name, status }) => (\n            <FormControlLabel\n              className={classes.label}\n              key={id}\n              value={codeName}\n              label={name}\n              disabled={!status}\n              control={\n                <Switch\n                  color=\"primary\"\n                  checked={selectedPackages.includes(codeName)}\n                />\n              }\n            />\n          ))}\n        </>\n      </FormGroup>\n    </article>\n  );\n}\n\nexport default InstallPackages;\n","import React, { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport packages from \"../../../../database/packages.json\";\nimport * as scripts from \"../../../../database/scripts\";\n\nconst useStyles = makeStyles({\n  conteiner: {\n    background: \"#c0c0c050\",\n    borderRadius: \"2vmin\",\n    padding: \"3vmin\",\n  },\n  chip: {\n    margin: \"1vmin\",\n  },\n  code: {\n    margin: \"3vmin 0\",\n    overflowX: \"auto\",\n  },\n});\n\nfunction GetScript({ data: { selectedManager, selectedPackages } }) {\n  const classes = useStyles();\n\n  const isNeedCurl = useMemo(\n    () => selectedPackages.some((item) => scripts.curl.should.includes(item)),\n    [selectedPackages]\n  );\n\n  return (\n    <div className={classes.conteiner}>\n      <p>\n        You are selected {selectedManager} package manager. Please, before are\n        run next script, will update your system.\n      </p>\n      {packages.map((item, index) => (\n        <Chip\n          key={index}\n          label={packages[index].name}\n          color={\n            selectedPackages.includes(item.codeName) ? \"primary\" : \"secondary\"\n          }\n          deleteIcon={<DoneIcon />}\n          className={classes.chip}\n        />\n      ))}\n      <Card className={classes.code} variant=\"outlined\">\n        {isNeedCurl && (\n          <Alert severity=\"warning\">\n            <AlertTitle>Warning</AlertTitle>\n            You are selected some package, which\n            <strong> need to install curl</strong>\n          </Alert>\n        )}\n        <CardContent>\n          <Typography variant=\"body2\" component=\"pre\">\n            {isNeedCurl &&\n              scripts.curl[selectedManager].map((str) => (\n                <>\n                  {str}\n                  <br />\n                  <br />\n                </>\n              ))}\n            {selectedPackages.map((item) => (\n              <>\n                {scripts[item][selectedManager].map((str) => (\n                  <>\n                    {str}\n                    <br />\n                  </>\n                ))}\n                <br />\n              </>\n            ))}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default GetScript;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport PackageManager from \"./steps/packageManager/packageManager\";\nimport InstallPackages from \"./steps/installPackages/installPackages\";\nimport GetScript from \"./steps/getScript/getScript\";\n\nconst useStyles = makeStyles({\n  bashGenerator: {\n    background: \"linear-gradient(45deg, #3f51b5, #cf53ff)\",\n    color: \"white\",\n    padding: \"3vmin\",\n    border: 0,\n    borderRadius: \"2vmin\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    minHeight: \"calc(100vh - 64px)\",\n  },\n  title: {\n    fontSize: \"1rem\",\n  },\n  footer: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n    gridGap: 32,\n    gridAutoFlow: \"dense\",\n    marginTop: \"1rem\",\n  },\n});\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    margin: \"1vmin 0 2vmin\",\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#cf53ff\",\n  },\n}))(LinearProgress);\n\nconst bashGenParam = \"bashGen\";\n\nfunction BashGenerator({ data }) {\n  const classes = useStyles();\n  const [step, setStep] = useState(0);\n  const [selectedManager, setSelectedManager] = useState(\"apt\");\n  const [selectedPackages, setSelectedPackages] = useState([]);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(bashGenParam)) {\n      const {\n        step = 0,\n        selectedManager = \"apt\",\n        selectedPackages = [],\n      } = JSON.parse(sessionStorage.getItem(bashGenParam));\n      setStep(step);\n      setSelectedManager(selectedManager);\n      setSelectedPackages(selectedPackages);\n    }\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setItem(\n      bashGenParam,\n      JSON.stringify({ step, selectedManager, selectedPackages, data: \"pisos\" })\n    );\n  }, [step, selectedManager, selectedPackages]);\n\n  const progressValue = (100 / 2) * step;\n\n  const steps = [\n    <PackageManager data={{ selectedManager, setSelectedManager }} />,\n    <InstallPackages\n      data={{ selectedManager, selectedPackages, setSelectedPackages }}\n    />,\n    <GetScript data={{ selectedManager, selectedPackages }} />,\n  ];\n\n  const isFirstStep = useMemo(() => step === 0, [step]);\n  const isLastStep = useMemo(() => step === steps.length - 1, [\n    step,\n    steps.length,\n  ]);\n\n  function prevStepHandler(event) {\n    event.preventDefault();\n    setStep(step === 0 ? 0 : step - 1);\n  }\n\n  function nextStepHandler(event) {\n    event.preventDefault();\n    setStep(step === 2 ? 2 : step + 1);\n  }\n\n  return (\n    <div className={classes.bashGenerator}>\n      <Typography variant=\"h2\" gutterBottom className={classes.title}>\n        Step {step + 1} of {steps.length}\n      </Typography>\n      <BorderLinearProgress variant=\"determinate\" value={progressValue} />\n      <>{steps[step]}</>\n      <div className={classes.footer}>\n        {!isFirstStep && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"button\"\n            value=\"prev\"\n            onClick={prevStepHandler}\n          >\n            Prev\n          </Button>\n        )}\n        {!isLastStep && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"button\"\n            value=\"next\"\n            onClick={nextStepHandler}\n          >\n            Next\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BashGenerator;\n","import React, { useEffect, useRef } from 'react';\n\nimport './App.css';\nimport Layout from \"./components/layout/layout\";\nimport BashGenerator from \"./components/bashGenerator/bashGenerator\";\n\nfunction App() {\n  const myRef = useRef();\n\n  useEffect(() => {\n    document.title = 'Bash Generator';\n    myRef.current.scrollTop = 0;\n  }, []);\n\n  return (\n    <div className=\"App\" ref={myRef}>\n      <Layout>\n        <BashGenerator />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}